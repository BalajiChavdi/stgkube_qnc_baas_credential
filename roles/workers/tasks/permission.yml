- name: Push new /etc/master.passwd file
  template:
    src: templates/worker_base_passwd.j2
    dest: /etc/master.passwd
    backup: yes
  register: new_master_passwd
  tags: access

- name: Copy over /etc/passwd
  copy:
    src: /etc/master.passwd
    dest: /etc/passwd
    remote_src: yes
    owner: root
    group: root
    mode: 0644
    backup: yes
  when: new_master_passwd is changed
  tags: access

- name: Copy over /etc/group file
  template:
    src: templates/worker_base_group.j2
    dest: /etc/group
    owner: root
    group: root
    mode: 0644
    backup: yes
  tags: access

- name: Run pwconv
  command: pwconv
  when: new_master_passwd is changed
  tags: access

- name: Create /etc/sudoers.d/BAAS
  template:
    src: templates/managed_sudoers.j2
    dest: /etc/sudoers.d/BAAS
    mode: 0440
    owner: root
    group: root
    validate: '/usr/sbin/visudo -cf %s'
  tags: access

- name: Update /etc/sudoers
  blockinfile:
    state: absent
    path: /etc/sudoers
    block: |
      noormohamed    ALL=(ALL:ALL) ALL
      _devops       ALL=(ALL:ALL) ALL
    validate: '/usr/sbin/visudo -cf %s'
  tags: access

# - name: Ansible check file exists example.
#   stat:
#     path: /root/.kube
#   register: kubedir_details
#
# - name: untar kubectl
#   shell: "tar -xvzf files/.kube.tgz -C /root"
#   delegate_to: 127.0.0.1
#   when: kubedir_details.stat.isdir is defined and kubedir_details.stat.isdir

- name: Run kube commands
  shell: "kubectl get pods -n baas-service | grep ssh | awk '{print $1}'"
  register: jumphost
  when: (new_master_passwd is changed) and (inventory_hostname == "bnecc001d")
  ignore_errors: yes
  # when: new_master_passwd is changed
  # delegate_to: 127.0.0.1

- name: Copy commands
  shell: "kubectl cp /etc/master.passwd baas-service/{{ item }}:/etc/master.passwd; kubectl cp /etc/passwd baas-service/{{ item }}:/etc/passwd; kubectl cp /etc/group baas-service/{{ item }}:/etc/group"
  with_items:  "{{ jumphost.stdout_lines }}"
  when: jumphost.changed

- name: Run pwconv
  command: "kubectl exec {{item}} -n baas-service pwconv"
  with_items:  "{{ jumphost.stdout_lines }}"
  when: jumphost.changed
